IDENTIFICATION DIVISION.
PROGRAM-ID. CONTENT-CACHE.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT OPTIONAL FILE-IO
    ASSIGN TO EXTERNAL DISK.

DATA DIVISION.
FILE SECTION.
FD FILE-IO.

WORKING-STORAGE SECTION.
01 BUFFER-CHUNK-SIZE PIC 9(10) VALUE 4194304. * 4MB
01 EXPIRE-AFTER-ACCESS-MS PIC 9(18) VALUE ZEROS.
01 MAX-TOTAL-BYTES PIC 9(18) VALUE ZEROS.
01 MAX-CONTENT-LENGTH PIC 9(18) VALUE ZEROS.
01 WS-CACHE.
    05 WS-CACHE-ENTRIES PIC 9(10) VALUE ZEROS.
    05 WS-CACHE-STATS.
        10 WS-CACHE-HITS PIC 9(18) VALUE ZEROS.
        10 WS-CACHE-MISSES PIC 9(18) VALUE ZEROS.
        10 WS-CACHE-EVICTIONS PIC 9(18) VALUE ZEROS.

LINKAGE SECTION.
01 LS-INPUT-FILE.
    05 LS-INPUT-FILE-LOCATION PIC X(256).
    05 LS-INPUT-FILE-LENGTH PIC 9(18).
01 LS-BYTE-BUFFERS.
    05 LS-BYTE-BUFFER-COUNT PIC 9(10).
    05 LS-BYTE-BUFFERS-TABLE OCCURS 1 TO 32767 TIMES
       DEPENDING ON LS-BYTE-BUFFER-COUNT
       PIC X(4194304).

PROCEDURE DIVISION USING LS-INPUT-FILE, LS-BYTE-BUFFERS.

    EVALUATE TRUE
        WHEN LS-INPUT-FILE-LENGTH <= MAX-CONTENT-LENGTH
            PERFORM TRY-CACHE
        WHEN OTHER
            RETURN LS-INPUT-FILE
    END-EVALUATE.

    STOP RUN.

TRY-CACHE SECTION.
    PERFORM DOWNLOAD-FILE
    MOVE LS-BYTE-BUFFER-COUNT TO WS-CACHE-ENTRIES
    MOVE LS-INPUT-FILE-LENGTH TO WS-CACHE-STATS(WS-CACHE-HITS)
    RETURN LS-BYTE-BUFFERS.

DOWNLOAD-FILE SECTION.
    OPEN INPUT FILE-IO
    MOVE 0 TO LS-BYTE-BUFFER-COUNT
    PERFORM UNTIL LS-INPUT-FILE-LENGTH = 0
        READ FILE-IO
            AT END
                MOVE LS-BYTE-BUFFER-COUNT TO WS-CACHE-STATS(WS-CACHE-MISSES)
                CLOSE FILE-IO
                MOVE 1 TO RETURN-CODE
                STOP RUN
            NOT AT END
                ADD 1 TO LS-BYTE-BUFFER-COUNT
                MOVE FILE-IO-RECORD TO LS-BYTE-BUFFERS(LS-BYTE-BUFFER-COUNT)
                SUBTRACT LENGTH OF FILE-IO-RECORD FROM LS-INPUT-FILE-LENGTH
        END-READ
    END-PERFORM
    CLOSE FILE-IO.