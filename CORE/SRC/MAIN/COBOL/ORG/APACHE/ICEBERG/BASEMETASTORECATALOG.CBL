IDENTIFICATION DIVISION.
PROGRAM-ID. BASE-METASTORE-CATALOG.

ENVIRONMENT DIVISION.
SPECIAL-NAMES.
    FUNCTION 'MORE-OBJECTS-TO-STRING' IS MORE-OBJECTS-TO-STRING
    FUNCTION 'PROPERTY-UTIL-PROPERTIES-WITH-PREFIX' IS PROPERTY-UTIL-PROPERTIES-WITH-PREFIX.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-METRICS-REPORTER USAGE IS POINTER.
01 WS-TABLE-PROPERTIES USAGE IS OBJECT REFERENCE.
01 WS-CATALOG-NAME PICTURE X(256).
01 WS-TABLE-IDENTIFIER USAGE IS OBJECT REFERENCE.
01 WS-TABLE-METADATA USAGE IS OBJECT REFERENCE.
01 WS-TABLE-OPERATIONS USAGE IS OBJECT REFERENCE.
01 WS-BASE-TABLE USAGE IS OBJECT REFERENCE.
01 WS-METADATA-TABLE USAGE IS OBJECT REFERENCE.
01 WS-METADATA-TABLE-TYPE USAGE IS OBJECT REFERENCE.
01 WS-BASE-TABLE-IDENTIFIER USAGE IS OBJECT REFERENCE.
01 WS-TRANSACTION USAGE IS OBJECT REFERENCE.
01 WS-SCHEMA USAGE IS OBJECT REFERENCE.
01 WS-PARTITION-SPEC USAGE IS OBJECT REFERENCE.
01 WS-SORT-ORDER USAGE IS OBJECT REFERENCE.
01 WS-TABLE-LOCATION PICTURE X(256).
01 WS-DEFAULT-WAREHOUSE-LOCATION PICTURE X(256).
01 WS-ALREADY-EXISTS-EXCEPTION USAGE IS OBJECT REFERENCE.
01 WS-NO-SUCH-TABLE-EXCEPTION USAGE IS OBJECT REFERENCE.
01 WS-COMMIT-FAILED-EXCEPTION USAGE IS OBJECT REFERENCE.

PROCEDURE DIVISION.

LOAD-TABLE.
    MOVE FUNCTION CALL 'LOAD-TABLE' GIVING WS-TABLE.
    IF WS-VALID-IDENTIFIER
        PERFORM NEW-TABLE-OPS
        IF WS-CURRENT = ZERO
            IF WS-VALID-METADATA-IDENTIFIER
                PERFORM LOAD-METADATA-TABLE
            ELSE
                RAISE WS-NO-SUCH-TABLE-EXCEPTION
            END-IF
        ELSE
            MOVE FUNCTION CALL 'NEW-BASE-TABLE' GIVING WS-BASE-TABLE
        END-IF
    ELSE IF WS-VALID-METADATA-IDENTIFIER
        PERFORM LOAD-METADATA-TABLE
    ELSE
        RAISE WS-NO-SUCH-TABLE-EXCEPTION
    END-IF.
    DISPLAY 'Table loaded by catalog: ' WS-BASE-TABLE.
    MOVE WS-BASE-TABLE TO RETURN-VALUE.

REGISTER-TABLE.
    MOVE FUNCTION CALL 'REGISTER-TABLE' GIVING WS-TABLE.
    IF WS-TABLE-IDENTIFIER = ZERO OR NOT WS-VALID-IDENTIFIER
        RAISE FUNCTION CALL 'PRECONDITIONS-CHECK-ARGUMENT' USING 'Invalid identifier: %s' WS-TABLE-IDENTIFIER
    END-IF.
    IF WS-METADATA-FILE-LOCATION = ZERO OR WS-METADATA-FILE-LOCATION = SPACES
        RAISE FUNCTION CALL 'PRECONDITIONS-CHECK-ARGUMENT' USING 'Cannot register an empty metadata file location as a table'
    END-IF.
    IF FUNCTION CALL 'TABLE-EXISTS' USING WS-TABLE-IDENTIFIER
        RAISE WS-ALREADY-EXISTS-EXCEPTION USING 'Table already exists: %s' WS-TABLE-IDENTIFIER
    END-IF.
    PERFORM NEW-TABLE-OPS
    MOVE FUNCTION CALL 'NEW-INPUT-FILE' USING WS-METADATA-FILE-LOCATION GIVING WS-INPUT-FILE.
    MOVE FUNCTION CALL 'READ-TABLE-METADATA' USING WS-IO WS-INPUT-FILE GIVING WS-TABLE-METADATA.
    MOVE FUNCTION CALL 'COMMIT' USING ZERO WS-TABLE-METADATA GIVING WS-SUCCESS.
    MOVE FUNCTION CALL 'NEW-BASE-TABLE' USING WS-TABLE-OPS WS-FULL-TABLE-NAME WS-METRICS-REPORTER GIVING WS-BASE-TABLE.
    MOVE WS-BASE-TABLE TO RETURN-VALUE.

BUILD-TABLE.
    MOVE FUNCTION CALL 'BUILD-TABLE' GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-IDENTIFIER TO WS-FIELD-1 OF WS-TABLE-BUILDER.
    MOVE WS-SCHEMA TO WS-FIELD-2 OF WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

LOAD-METADATA-TABLE.
    MOVE WS-TABLE-IDENTIFIER-NAME TO WS-TABLE-NAME.
    MOVE FUNCTION CALL 'FROM-METADATA-TABLE-TYPE' USING WS-TABLE-NAME GIVING WS-METADATA-TABLE-TYPE.
    IF WS-METADATA-TABLE-TYPE NOT = ZERO
        MOVE FUNCTION CALL 'OF' USING WS-TABLE-IDENTIFIER-NAMESPACE-LEVELS GIVING WS-BASE-TABLE-IDENTIFIER
        PERFORM NEW-TABLE-OPS USING WS-BASE-TABLE-IDENTIFIER
        IF WS-CURRENT = ZERO
            RAISE WS-NO-SUCH-TABLE-EXCEPTION USING 'Table does not exist: %s' WS-BASE-TABLE-IDENTIFIER
        END-IF
        MOVE FUNCTION CALL 'CREATE-METADATA-TABLE-INSTANCE' USING WS-TABLE-OPS WS-CATALOG-NAME WS-BASE-TABLE-IDENTIFIER WS-TABLE-IDENTIFIER WS-METADATA-TABLE-TYPE GIVING WS-METADATA-TABLE
    ELSE
        RAISE WS-NO-SUCH-TABLE-EXCEPTION USING 'Table does not exist: %s' WS-TABLE-IDENTIFIER
    END-IF.
    MOVE WS-METADATA-TABLE TO RETURN-VALUE.

IS-VALID-METADATA-IDENTIFIER.
    MOVE FUNCTION CALL 'FROM-METADATA-TABLE-TYPE' USING WS-TABLE-IDENTIFIER-NAME GIVING WS-METADATA-TABLE-TYPE.
    IF WS-METADATA-TABLE-TYPE NOT = ZERO AND WS-VALID-IDENTIFIER
        MOVE 1 TO RETURN-VALUE
    ELSE
        MOVE 0 TO RETURN-VALUE
    END-IF.

IS-VALID-IDENTIFIER.
    MOVE 1 TO RETURN-VALUE.

PROPERTIES.
    MOVE FUNCTION CALL 'IMMUTABLE-MAP' GIVING WS-TABLE-PROPERTIES.
    MOVE WS-TABLE-PROPERTIES TO RETURN-VALUE.

STRING-HELPER.
    MOVE FUNCTION CALL 'TO-STRING-HELPER' GIVING WS-STRING.
    MOVE WS-STRING TO RETURN-VALUE.

NEW-TABLE-OPS.
    MOVE FUNCTION CALL 'NEW-TABLE-OPS' USING WS-TABLE-IDENTIFIER GIVING WS-TABLE-OPERATIONS.
    MOVE WS-TABLE-OPERATIONS TO RETURN-VALUE.

DEFAULT-WAREHOUSE-LOCATION.
    MOVE FUNCTION CALL 'DEFAULT-WAREHOUSE-LOCATION' USING WS-TABLE-IDENTIFIER GIVING WS-DEFAULT-WAREHOUSE-LOCATION.
    MOVE WS-DEFAULT-WAREHOUSE-LOCATION TO RETURN-VALUE.

CLOSE.
    IF WS-METRICS-REPORTER NOT = ZERO
        MOVE FUNCTION CALL 'CLOSE' GIVING WS-SUCCESS
    END-IF.

BASE-METASTORE-CATALOG-TABLE-BUILDER.
    MOVE FUNCTION CALL 'BASE-METASTORE-CATALOG-TABLE-BUILDER' USING WS-TABLE-IDENTIFIER WS-SCHEMA GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-PROPERTIES TO WS-FIELD-1 OF WS-TABLE-BUILDER.
    MOVE WS-PARTITION-SPEC TO WS-FIELD-2 OF WS-TABLE-BUILDER.
    MOVE WS-SORT-ORDER TO WS-FIELD-3 OF WS-TABLE-BUILDER.
    MOVE WS-TABLE-LOCATION TO WS-FIELD-4 OF WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

WITH-PARTITION-SPEC.
    MOVE FUNCTION CALL 'WITH-PARTITION-SPEC' USING WS-PARTITION-SPEC GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

WITH-SORT-ORDER.
    MOVE FUNCTION CALL 'WITH-SORT-ORDER' USING WS-SORT-ORDER GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

WITH-LOCATION.
    MOVE FUNCTION CALL 'WITH-LOCATION' USING WS-TABLE-LOCATION GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

WITH-PROPERTIES.
    MOVE FUNCTION CALL 'WITH-PROPERTIES' USING WS-TABLE-PROPERTIES GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

WITH-PROPERTY.
    MOVE FUNCTION CALL 'WITH-PROPERTY' USING WS-PROPERTY-KEY WS-PROPERTY-VALUE GIVING WS-TABLE-BUILDER.
    MOVE WS-TABLE-BUILDER TO RETURN-VALUE.

CREATE.
    PERFORM NEW-TABLE-OPS
    IF WS-CURRENT NOT = ZERO
        RAISE WS-ALREADY-EXISTS-EXCEPTION USING 'Table already exists: %s' WS-TABLE-IDENTIFIER
    END-IF.
    IF WS-TABLE-LOCATION = ZERO
        MOVE FUNCTION CALL 'DEFAULT-WAREHOUSE-LOCATION' USING WS-TABLE-IDENTIFIER GIVING WS-TABLE-LOCATION
    END-IF.
    MOVE FUNCTION CALL 'TABLE-OVERRIDE-PROPERTIES' GIVING WS-TABLE-PROPERTIES.
    MOVE FUNCTION CALL 'NEW-TABLE-METADATA' USING WS-SCHEMA WS-PARTITION-SPEC WS-SORT-ORDER WS-TABLE-LOCATION WS-TABLE-PROPERTIES GIVING WS-TABLE-METADATA.
    MOVE FUNCTION CALL 'COMMIT' USING ZERO WS-TABLE-METADATA GIVING WS-SUCCESS.
    MOVE FUNCTION CALL 'NEW-BASE-TABLE' USING WS-TABLE-OPS WS-FULL-TABLE-NAME WS-METRICS-REPORTER GIVING WS-BASE-TABLE.
    MOVE WS-BASE-TABLE TO RETURN-VALUE.

CREATE-TRANSACTION.
    PERFORM NEW-TABLE-OPS
    IF WS-CURRENT NOT = ZERO
        RAISE WS-ALREADY-EXISTS-EXCEPTION USING 'Table already exists: %s' WS-TABLE-IDENTIFIER
    END-IF.
    IF WS-TABLE-LOCATION = ZERO
        MOVE FUNCTION CALL 'DEFAULT-WAREHOUSE-LOCATION' USING WS-TABLE-IDENTIFIER GIVING WS-TABLE-LOCATION
    END-IF.
    MOVE FUNCTION CALL 'TABLE-OVERRIDE-PROPERTIES' GIVING WS-TABLE-PROPERTIES.
    MOVE FUNCTION CALL 'NEW-TABLE-METADATA' USING WS-SCHEMA WS-PARTITION-SPEC WS-SORT-ORDER WS-TABLE-LOCATION WS-TABLE-PROPERTIES GIVING WS-TABLE-METADATA.
    MOVE FUNCTION CALL 'CREATE-TABLE-TRANSACTION' USING WS-TABLE-IDENTIFIER-STRING WS-TABLE-OPS WS-TABLE-METADATA WS-METRICS-REPORTER GIVING WS-TRANSACTION.
    MOVE WS-TRANSACTION TO RETURN-VALUE.

REPLACE-TRANSACTION.
    MOVE FUNCTION CALL 'NEW-REPLACE-TABLE-TRANSACTION' USING 0 GIVING WS-TRANSACTION.
    MOVE WS-TRANSACTION TO RETURN-VALUE.

CREATE-OR-REPLACE-TRANSACTION.
    MOVE FUNCTION CALL 'NEW-REPLACE-TABLE-TRANSACTION' USING 1 GIVING WS-TRANSACTION.
    MOVE WS-TRANSACTION TO RETURN-VALUE.

NEW-REPLACE-TABLE-TRANSACTION.
    PERFORM NEW-TABLE-OPS
    IF WS-CURRENT = ZERO AND WS-OR-CREATE = 0
        RAISE WS-NO-SUCH-TABLE-EXCEPTION USING 'Table does not exist: %s' WS-TABLE-IDENTIFIER
    END-IF.
    MOVE FUNCTION CALL 'TABLE-OVERRIDE-PROPERTIES' GIVING WS-TABLE-PROPERTIES.
    IF WS-CURRENT NOT = ZERO
        IF WS-TABLE-LOCATION = ZERO
            MOVE FUNCTION CALL 'CURRENT-LOCATION' GIVING WS-TABLE-LOCATION
        END-IF
        MOVE FUNCTION CALL 'BUILD-REPLACEMENT' USING WS-SCHEMA WS-PARTITION-SPEC WS-SORT-ORDER WS-TABLE-LOCATION WS-TABLE-PROPERTIES GIVING WS-TABLE-METADATA
    ELSE
        IF WS-TABLE-LOCATION = ZERO
            MOVE FUNCTION CALL 'DEFAULT-WAREHOUSE-LOCATION' USING WS-TABLE-IDENTIFIER GIVING WS-TABLE-LOCATION
        END-IF
        MOVE FUNCTION CALL 'NEW-TABLE-METADATA' USING WS-SCHEMA WS-PARTITION-SPEC WS-SORT-ORDER WS-TABLE-LOCATION WS-TABLE-PROPERTIES GIVING WS-TABLE-METADATA
    END-IF.
    IF WS-OR-CREATE = 1
        MOVE FUNCTION CALL 'CREATE-OR-REPLACE-TABLE-TRANSACTION' USING WS-TABLE-IDENTIFIER-STRING WS-TABLE-OPS WS-TABLE-METADATA WS-METRICS-REPORTER GIVING WS-TRANSACTION
    ELSE
        MOVE FUNCTION CALL 'REPLACE-TABLE-TRANSACTION' USING WS-TABLE-IDENTIFIER-STRING WS-TABLE-OPS WS-TABLE-METADATA WS-METRICS-REPORTER GIVING WS-TRANSACTION
    END-IF.
    MOVE WS-TRANSACTION TO RETURN-VALUE.

TABLE-DEFAULT-PROPERTIES.
    MOVE FUNCTION CALL 'PROPERTIES-WITH-PREFIX' USING WS-PROPERTIES CatalogProperties-TABLE-DEFAULT-PREFIX GIVING WS-TABLE-PROPERTIES.
    DISPLAY 'Table properties set at catalog level through catalog properties: ' WS-TABLE-PROPERTIES.
    MOVE WS-TABLE-PROPERTIES TO RETURN-VALUE.

TABLE-OVERRIDE-PROPERTIES.
    MOVE FUNCTION CALL 'PROPERTIES-WITH-PREFIX' USING WS-PROPERTIES CatalogProperties-TABLE-OVERRIDE-PREFIX GIVING WS-TABLE-PROPERTIES.
    DISPLAY 'Table properties enforced at catalog level through catalog properties: ' WS-TABLE-PROPERTIES.
    MOVE WS-TABLE-PROPERTIES TO RETURN-VALUE.

FULL-TABLE-NAME.
    MOVE FUNCTION CALL 'FULL-TABLE-NAME' USING WS-CATALOG-NAME WS-TABLE-IDENTIFIER GIVING WS-FULL-TABLE-NAME.
    MOVE WS-FULL-TABLE-NAME TO RETURN-VALUE.

METRICS-REPORTER.
    IF WS-METRICS-REPORTER = ZERO
        MOVE FUNCTION CALL 'LOAD-METRICS-REPORTER' USING WS-PROPERTIES GIVING WS-METRICS-REPORTER
    END-IF.
    MOVE WS-METRICS-REPORTER TO RETURN-VALUE.