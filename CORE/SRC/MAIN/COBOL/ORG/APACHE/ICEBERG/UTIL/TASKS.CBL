IDENTIFICATION DIVISION.
PROGRAM-ID. TASKS.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-EXCEPTIONS PIC X(32767) VALUE SPACES.
01 WS-SUCCEEDED PIC X(32767) VALUE SPACES.
01 WS-TASK-FAILED PIC X(1) VALUE 'N'.
01 WS-ABORT-FAILED PIC X(1) VALUE 'N'.
01 WS-REVERT-FAILED PIC X(1) VALUE 'N'.
01 WS-ATTEMPT-COUNT PIC 9(10) VALUE 0.
01 WS-START-TIME PIC 9(18) VALUE 0.
01 WS-DURATION-MS PIC 9(18) VALUE 0.
01 WS-DELAY-MS PIC 9(10) VALUE 0.
01 WS-JITTER PIC 9(10) VALUE 0.
01 WS-SLEEP-TIME-MS PIC 9(10) VALUE 0.

PROCEDURE DIVISION.

MAIN-PARAGRAPH.
    PERFORM SINGLE-THREADED-EXECUTION.
    IF WS-TASK-FAILED = 'Y' OR NOT WS-THROWFAILURE-WHEN-FINISHED
        MOVE 'N' TO RETURN-CODE
    ELSE
        MOVE 'Y' TO RETURN-CODE
    END-IF.
    STOP RUN.

SINGLE-THREADED-EXECUTION.
    PERFORM VARYING WS-ITEM FROM 1 BY 1 UNTIL WS-ITEM > WS-ITEM-COUNT
        PERFORM RUN-TASK-WITH-RETRY
        IF WS-TASK-FAILED = 'Y'
            PERFORM TRY-RUN-ON-FAILURE
            IF WS-STOP-ON-FAILURE
                EXIT PARAGRAPH
            END-IF
        ELSE
            STRING WS-ITEM INTO WS-SUCCEEDED
        END-IF
    END-PERFORM.
    IF WS-THROWFAILURE-WHEN-FINISHED AND WS-EXCEPTIONS NOT = SPACES
        PERFORM THROW-ONE-EXCEPTION
    END-IF.

RUN-TASK-WITH-RETRY.
    MOVE FUNCTION CURRENT-DATE TO WS-START-TIME.
    MOVE 0 TO WS-ATTEMPT-COUNT.
    PERFORM UNTIL RETURN-CODE <> 0
        ADD 1 TO WS-ATTEMPT-COUNT
        PERFORM RUN-TASK
        IF RETURN-CODE = 0
            EXIT PARAGRAPH
        ELSE
            COMPUTE WS-DURATION-MS = FUNCTION CURRENT-DATE - WS-START-TIME
            IF WS-ATTEMPT-COUNT >= WS-MAX-ATTEMPTS OR WS-DURATION-MS > WS-MAX-DURATION-MS
                MOVE 'Y' TO WS-TASK-FAILED
                MOVE 1 TO RETURN-CODE
                EXIT PARAGRAPH
            END-IF
            PERFORM RETRY-TASK
        END-IF
    END-PERFORM.

RUN-TASK.
    CALL 'TASK-ROUTINE' USING WS-ITEM.
    IF RETURN-CODE <> 0
        MOVE 'Y' TO WS-TASK-FAILED
    END-IF.

TRY-RUN-ON-FAILURE.
    CALL 'ON-FAILURE-ROUTINE' USING WS-ITEM, WS-EXCEPTIONS.
    IF RETURN-CODE <> 0
        STRING WS-EXCEPTIONS INTO WS-EXCEPTIONS
    END-IF.

RETRY-TASK.
    COMPUTE WS-DELAY-MS = WS-MIN-SLEEP-TIME-MS * FUNCTION ORD(WS-ATTEMPT-COUNT - 1) ** WS-SCALE-FACTOR
    IF WS-DELAY-MS > WS-MAX-SLEEP-TIME-MS
        MOVE WS-MAX-SLEEP-TIME-MS TO WS-DELAY-MS
    END-IF
    MOVE FUNCTION RANDOM(1) * 0.1 * WS-DELAY-MS TO WS-JITTER
    COMPUTE WS-SLEEP-TIME-MS = WS-DELAY-MS + WS-JITTER
    DISPLAY 'Retrying task after failure: sleepTimeMs=' WS-SLEEP-TIME-MS ', ' WS-EXCEPTIONS
    CALL 'SLEEP' USING WS-SLEEP-TIME-MS.

THROW-ONE-EXCEPTION.
    MOVE 1 TO WS-ITEM
    MOVE WS-EXCEPTIONS TO WS-ITEM-EXCEPTION
    CALL 'THROWONE' USING WS-ITEM-EXCEPTION, EXCEPTION-CLASS.
    IF RETURN-CODE <> 0
        MOVE 'Y' TO WS-TASK-FAILED
    END-IF.