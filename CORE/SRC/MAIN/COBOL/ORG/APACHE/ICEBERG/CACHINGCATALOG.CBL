IDENTIFICATION DIVISION.
PROGRAM-ID. CACHING-CATALOG.

ENVIRONMENT DIVISION.
REPOSITORY.
    CLASS CATALOG IS "org.apache.iceberg.catalog.Catalog".
    CLASS TABLE-IDENTIFIER IS "org.apache.iceberg.catalog.TableIdentifier".
    CLASS METADATA-TABLE-TYPE IS "org.apache.iceberg.MetadataTableType".
    CLASS SCHEMA IS "org.apache.iceberg.Schema".
    CLASS PARTITION-SPEC IS "org.apache.iceberg.PartitionSpec".
    CLASS SORT-ORDER IS "org.apache.iceberg.SortOrder".
    CLASS TRANSACTION IS "org.apache.iceberg.Transaction".
    CLASS TABLE IS "org.apache.iceberg.Table".
    CLASS CACHE IS "com.github.benmanes.caffeine.cache.Cache".
    CLASS CAFFEINE IS "com.github.benmanes.caffeine.cache.Caffeine".
    CLASS REMOVAL-CAUSE IS "com.github.benmanes.caffeine.cache.RemovalCause".
    CLASS REMOVAL-LISTENER IS "com.github.benmanes.caffeine.cache.RemovalListener".
    CLASS TICKER IS "com.github.benmanes.caffeine.cache.Ticker".
    CLASS PRECONDITIONS IS "org.apache.iceberg.relocated.com.google.common.base.Preconditions".
    CLASS IMMUTABLE-LIST IS "org.apache.iceberg.relocated.com.google.common.collect.ImmutableList".
    CLASS LOGGER IS "org.slf4j.Logger".
    CLASS LOG-FACTORY IS "org.slf4j.LoggerFactory".
    CLASS ATOMIC-BOOLEAN IS "java.util.concurrent.atomic.AtomicBoolean".
    CLASS CATALOG-PROPERTIES IS "org.apache.iceberg.catalog.CatalogProperties".
    CLASS METADATA-TABLE-UTILS IS "org.apache.iceberg.MetadataTableUtils".
    CLASS COMMIT-CALLBACK-TRANSACTION IS "org.apache.iceberg.CommitCallbackTransaction".
    CLASS ALREADY-EXISTS-EXCEPTION IS "org.apache.iceberg.exceptions.AlreadyExistsException".
    CLASS HAS-TABLE-OPERATIONS IS "org.apache.iceberg.HasTableOperations".
    CLASS BASE-METADATA-TABLE IS "org.apache.iceberg.BaseMetadataTable".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-CATALOG PIC X(30).
01 WS-CASE-SENSITIVE PIC X(01).
01 WS-EXPIRATION-INTERVAL-MILLIS PIC 9(18).
01 WS-TABLE-CACHE OBJECT REFERENCE CACHE.
01 WS-METADATA-TABLE-TYPE-VALUES REDEFINES METADATA-TABLE-TYPE-VALUES.
   05 WS-METADATA-TABLE-TYPE-VALUE OCCURS 1 TO 9 TIMES DEPENDING ON METADATA-TABLE-TYPE-VALUES-LENGTH.
      10 WS-METADATA-TABLE-TYPE-NAME PIC X(30).

PROCEDURE DIVISION.
MAIN-PROCEDURE SECTION.

    MOVE "CachingCatalog" TO WS-CATALOG.
    MOVE "Y" TO WS-CASE-SENSITIVE.
    MOVE CATALOG-PROPERTIES-CACHE-EXPIRATION-INTERVAL-MS-OFF TO WS-EXPIRATION-INTERVAL-MILLIS.

    PERFORM CREATE-TABLE-CACHE.

    PERFORM WRAP-CATALOG USING CATALOG, WS-CASE-SENSITIVE, WS-EXPIRATION-INTERVAL-MILLIS
        RETURNING WS-CATALOG.

    STOP RUN.

CREATE-TABLE-CACHE SECTION.
    IF WS-EXPIRATION-INTERVAL-MILLIS = 0
        PERFORM CREATE-CAFFEINE-CACHE
    ELSE
        PERFORM CREATE-EXPIRING-CACHE.

CREATE-CAFFEINE-CACHE SECTION.
    SET WS-TABLE-CACHE TO CAFFEINE-CREATE-CACHE.

CREATE-EXPIRING-CACHE SECTION.
    SET WS-TABLE-CACHE TO CAFFEINE-CREATE-CACHE
        USING METADATA-TABLE-INVALIDATING-REMOVAL-LISTENER
        USING RUNNABLE-RUN
        USING DURATION-OF-MILLIS(WS-EXPIRATION-INTERVAL-MILLIS)
        USING TICKER.

WRAP-CATALOG SECTION.
    IF WS-EXPIRATION-INTERVAL-MILLIS = 0
        PERFORM WRAP-CATALOG-IMPL USING CATALOG
        RETURNING WS-CATALOG
    ELSE
        PERFORM WRAP-CATALOG-IMPL USING CATALOG, WS-CASE-SENSITIVE, WS-EXPIRATION-INTERVAL-MILLIS
        RETURNING WS-CATALOG.

WRAP-CATALOG-IMPL SECTION.
    MOVE CATALOG TO WS-CATALOG.

METADATA-TABLE-INVALIDATING-REMOVAL-LISTENER SECTION.
    PROCEDURE DIVISION USING TABLE-IDENTIFIER, TABLE, REMOVAL-CAUSE.

        IF REMOVAL-CAUSE = REMOVAL-CAUSE-EXPIRED
            IF NOT METADATA-TABLE-UTILS-HAS-METADATA-TABLE-NAME(TABLE-IDENTIFIER)
                PERFORM INVALIDATE-METADATA-TABLES USING TABLE-IDENTIFIER.

    END PROCEDURE DIVISION.

INVALIDATE-METADATA-TABLES SECTION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-METADATA-TABLE-TYPE-VALUES-LENGTH
        COMPUTE WS-METADATA-TABLE-TYPE-NAME = TABLE-IDENTIFIER + "." + WS-METADATA-TABLE-TYPE-VALUE(I)
        PERFORM INVALIDATE-TABLE USING WS-METADATA-TABLE-TYPE-NAME
    END-PERFORM.

INVALIDATE-TABLE SECTION.
    PROCEDURE DIVISION USING TABLE-IDENTIFIER.
        MOVE CANONICAL-IDENTIFIER(TABLE-IDENTIFIER) TO TABLE-IDENTIFIER.
        CALL "INVALIDATE" ON WS-TABLE-CACHE USING TABLE-IDENTIFIER.
        CALL "INVALIDATE" ON CATALOG USING TABLE-IDENTIFIER.
    END PROCEDURE DIVISION.

CANONICAL-IDENTIFIER SECTION.
    PROCEDURE DIVISION USING TABLE-IDENTIFIER.
        IF WS-CASE-SENSITIVE
            RETURN TABLE-IDENTIFIER
        ELSE
            CONVERT TABLE-IDENTIFIER TO LOWERCASE
            RETURN TABLE-IDENTIFIER.
    END PROCEDURE DIVISION.

LOAD-TABLE SECTION.
    PROCEDURE DIVISION USING TABLE-IDENTIFIER.
        MOVE CANONICAL-IDENTIFIER(TABLE-IDENTIFIER) TO TABLE-IDENTIFIER.
        CALL "GET-IF-PRESENT" ON WS-TABLE-CACHE USING TABLE-IDENTIFIER RETURNING TABLE.
        IF TABLE IS NOT NULL
            RETURN TABLE.

        CALL "GET" ON WS-TABLE-CACHE USING TABLE-IDENTIFIER, CATALOG-LOAD-TABLE RETURNING TABLE.

        IF TABLE IS BASE-METADATA-TABLE
            MOVE TABLE-IDENTIFIER TO ORIGIN-TABLE-IDENTIFIER.
            CALL "GET" ON WS-TABLE-CACHE USING ORIGIN-TABLE-IDENTIFIER, CATALOG-LOAD-TABLE RETURNING ORIGIN-TABLE.

            IF ORIGIN-TABLE IS HAS-TABLE-OPERATIONS
                MOVE OPERATIONS(ORIGIN-TABLE) TO OPS.
                MOVE METADATA-TABLE-TYPE-FROM(TABLE-IDENTIFIER-NAME) TO TYPE.
                MOVE METADATA-TABLE-UTILS-CREATE-METADATA-TABLE-INSTANCE(OPS, CATALOG-NAME, ORIGIN-TABLE-IDENTIFIER, TABLE-IDENTIFIER, TYPE) TO TABLE.
                CALL "PUT" ON WS-TABLE-CACHE USING TABLE-IDENTIFIER, TABLE.
            END-IF.
        END-IF.

        RETURN TABLE.
    END PROCEDURE DIVISION.

CATALOG-LOAD-TABLE SECTION.
    PROCEDURE DIVISION USING TABLE-IDENTIFIER.
        CALL "LOAD-TABLE" ON CATALOG USING TABLE-IDENTIFIER RETURNING TABLE.
        RETURN TABLE.
    END PROCEDURE DIVISION.

DROP-TABLE SECTION.
    PROCEDURE DIVISION USING TABLE-IDENTIFIER, PURGE.
        CALL "DROP-TABLE" ON CATALOG USING TABLE-IDENTIFIER, PURGE RETURNING DROPPED.
        PERFORM INVALIDATE-TABLE USING TABLE-IDENTIFIER.
        RETURN DROPPED.
    END PROCEDURE DIVISION.

RENAME-TABLE SECTION.
    PROCEDURE DIVISION USING FROM-IDENTIFIER, TO-IDENTIFIER.
        CALL "RENAME-TABLE" ON CATALOG USING FROM-IDENTIFIER, TO-IDENTIFIER.
        PERFORM INVALIDATE-TABLE USING FROM-IDENTIFIER.
    END PROCEDURE DIVISION.

REGISTER-TABLE SECTION.
    PROCEDURE DIVISION USING IDENTIFIER, METADATA-FILE-LOCATION.
        CALL "REGISTER-TABLE" ON CATALOG USING IDENTIFIER, METADATA-FILE-LOCATION RETURNING TABLE.
        PERFORM INVALIDATE-TABLE USING IDENTIFIER.
        RETURN TABLE.
    END PROCEDURE DIVISION.

CACHING-TABLE-BUILDER SECTION.
    PROCEDURE DIVISION USING IDENTIFIER, SCHEMA.
        MOVE IDENTIFIER TO WS-IDENT.
        MOVE CATALOG-BUILD-TABLE(IDENTIFIER, SCHEMA) TO WS-INNER-BUILDER.

        PROCEDURE DIVISION.
            SECTION CREATE-TABLE.
                MOVE FALSE TO WS-CREATED.
                CALL "GET" ON WS-TABLE-CACHE USING CANONICAL-IDENTIFIER(WS-IDENT), WS-INNER-BUILDER-CREATE RETURNING TABLE.
                IF WS-CREATED
                    RETURN TABLE
                ELSE
                    RAISE ALREADY-EXISTS-EXCEPTION "Table already exists: %s" WS-IDENT.
                END-IF.
            END SECTION.

            SECTION CREATE-TRANSACTION.
                CALL "CREATE-TRANSACTION" ON WS-INNER-BUILDER RETURNING TRANSACTION.
                RETURN TRANSACTION.
            END SECTION.

            SECTION REPLACE-TRANSACTION.
                CALL "REPLACE-TRANSACTION" ON WS-INNER-BUILDER RETURNING TRANSACTION.
                CALL "ADD-CALLBACK" ON COMMIT-CALLBACK-TRANSACTION USING TRANSACTION, INVALIDATE-TABLE-CALLBACK.
                RETURN TRANSACTION.
            END SECTION.

            SECTION CREATE-OR-REPLACE-TRANSACTION.
                CALL "CREATE-OR-REPLACE-TRANSACTION" ON WS-INNER-BUILDER RETURNING TRANSACTION.
                CALL "ADD-CALLBACK" ON COMMIT-CALLBACK-TRANSACTION USING TRANSACTION, INVALIDATE-TABLE-CALLBACK.
                RETURN TRANSACTION.
            END SECTION.

            SECTION INVALIDATE-TABLE-CALLBACK.
                PERFORM INVALIDATE-TABLE USING WS-IDENT.
            END SECTION.

            SECTION WITH-PARTITION-SPEC.
                CALL "WITH-PARTITION-SPEC" ON WS-INNER-BUILDER USING PARTITION-SPEC RETURNING WS-INNER-BUILDER.
                RETURN WS-INNER-BUILDER.
            END SECTION.

            SECTION WITH-SORT-ORDER.
                CALL "WITH-SORT-ORDER" ON WS-INNER-BUILDER USING SORT-ORDER RETURNING WS-INNER-BUILDER.
                RETURN WS-INNER-BUILDER.
            END SECTION.

            SECTION WITH-LOCATION.
                CALL "WITH-LOCATION" ON WS-INNER-BUILDER USING LOCATION RETURNING WS-INNER-BUILDER.
                RETURN WS-INNER-BUILDER.
            END SECTION.

            SECTION WITH-PROPERTIES.
                CALL "WITH-PROPERTIES" ON WS-INNER-BUILDER USING PROPERTIES RETURNING WS-INNER-BUILDER.
                RETURN WS-INNER-BUILDER.
            END SECTION.

            SECTION WITH-PROPERTY.
                CALL "WITH-PROPERTY" ON WS-INNER-BUILDER USING KEY, VALUE RETURNING WS-INNER-BUILDER.
                RETURN WS-INNER-BUILDER.
            END SECTION.
        END PROCEDURE DIVISION.
    END PROCEDURE DIVISION.