IDENTIFICATION DIVISION.
PROGRAM-ID. ROARINGPOSITIONBITMAP.

ENVIRONMENT DIVISION.
REPOSITORY.
    COPY "ROARINGBITMAP.CPY".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-MAX-POSITION                   PIC 9(18) COMP-3 VALUE 9223372036854775807.
01 WS-EMPTY-BITMAP-ARRAY             OCCURS 0 TO 65535 TIMES DEPENDING ON WS-BITMAP-COUNT.
    05 WS-BITMAP                     USAGE IS POINTER.
01 WS-BITMAP-COUNT                   PIC 9(9) COMP.
01 WS-BITMAP-KEY-SIZE-BYTES          PIC 9(9) COMP VALUE 4.
01 WS-BITMAP-COUNT-SIZE-BYTES        PIC 9(9) COMP VALUE 8.

PROCEDURE DIVISION.
MAIN-PROCEDURE.

    INITIALIZE WS-EMPTY-BITMAP-ARRAY.
    MOVE 0 TO WS-BITMAP-COUNT.

    MOVE WS-MAX-POSITION TO FUNCTION NUMVAL-C("9223372036854775807").

    PERFORM SET-POSITION.
    PERFORM SET-RANGE.
    PERFORM SET-ALL.
    PERFORM CONTAINS.
    PERFORM IS-EMPTY.
    PERFORM CARDINALITY.
    PERFORM RUN-LENGTH-ENCODE.
    PERFORM FOREACH.
    PERFORM SERIALIZED-SIZE.
    PERFORM SERIALIZE.
    PERFORM DESERIALIZE.

    STOP RUN.

SET-POSITION.
    MOVE 1 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    CALL "RB-ADD" USING WS-BITMAP(1), 1234.

SET-RANGE.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    PERFORM VARYING WS-POSITION FROM 1 BY 1 UNTIL WS-POSITION > 10
        CALL "RB-ADD" USING WS-BITMAP(1), WS-POSITION
        CALL "RB-ADD" USING WS-BITMAP(2), WS-POSITION
    END-PERFORM.

SET-ALL.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    CALL "RB-OR" USING WS-BITMAP(1), WS-BITMAP(2).

CONTAINS.
    MOVE 1 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    CALL "RB-CONTAINS" USING WS-BITMAP(1), 1234.

IS-EMPTY.
    MOVE 1 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    CALL "RB-IS-EMPTY" USING WS-BITMAP(1).

CARDINALITY.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    CALL "RB-GET-CARDINALITY" USING WS-BITMAP(1), WS-BITMAP(2), GIVING WS-CARDINALITY.

RUN-LENGTH-ENCODE.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    CALL "RB-RUN-OPTIMIZE" USING WS-BITMAP(1), WS-BITMAP(2).

FOREACH.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    PERFORM VARYING WS-POSITION FROM 1 BY 1 UNTIL WS-POSITION > 10
        CALL "RB-FOREACH" USING WS-BITMAP(1), WS-BITMAP(2), WS-POSITION
    END-PERFORM.

SERIALIZED-SIZE.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    COMPUTE WS-SERIALIZED-SIZE = WS-BITMAP-COUNT-SIZE-BYTES +
                                (WS-BITMAP-COUNT * WS-BITMAP-KEY-SIZE-BYTES) +
                                FUNCTION SUM(CALL "RB-SERIALIZED-SIZE" USING WS-BITMAP(1), WS-BITMAP(2)).

SERIALIZE.
    MOVE 2 TO WS-BITMAP-COUNT.
    PERFORM ALLOCATE-BITMAPS-IF-NEEDED.
    MOVE 12345 TO WS-BITMAP(1).
    MOVE 67890 TO WS-BITMAP(2).
    MOVE FUNCTION NUMVAL-C("0123456789ABCDEF"X) TO WS-BUFFER.
    CALL "RB-SERIALIZE" USING WS-BUFFER, WS-BITMAP(1), WS-BITMAP(2).

DESERIALIZE.
    MOVE FUNCTION NUMVAL-C("0123456789ABCDEF"X) TO WS-BUFFER.
    CALL "RB-DESERIALIZE" USING WS-BUFFER, GIVING WS-BITMAP-COUNT.
    PERFORM VARYING WS-INDEX FROM 1 BY 1 UNTIL WS-INDEX > WS-BITMAP-COUNT
        CALL "RB-READ-BITMAP" USING WS-BUFFER, GIVING WS-BITMAP(WS-INDEX)
    END-PERFORM.

ALLOCATE-BITMAPS-IF-NEEDED.
    IF WS-BITMAP-COUNT > 0
        MOVE WS-BITMAP-COUNT TO WS-MAX-BITMAP-COUNT
    ELSE
        MOVE 1 TO WS-MAX-BITMAP-COUNT
    END-IF.
    ALLOCATE WS-EMPTY-BITMAP-ARRAY(1:WS-MAX-BITMAP-COUNT)
        INITIALIZED BY NULLS
        GIVING WS-BITMAP-PTRS.