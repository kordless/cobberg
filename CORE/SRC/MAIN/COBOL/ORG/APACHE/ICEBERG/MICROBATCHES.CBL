IDENTIFICATION DIVISION.
PROGRAM-ID. MICRO-BATCHES.

ENVIRONMENT DIVISION.
REPOSITORY.
    COPY ICEBERG.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 INDEXED-MANIFESTS PIC X(256) OCCURS 32767.
01 CURRENT-FILE-INDEX PIC 9(18) COMP.
01 CURRENT-SIZE-IN-BYTES PIC 9(18) COMP.
01 IS-LAST-INDEX PIC X.
01 TASKS PIC X(256) OCCURS 32767.
01 MICRO-BATCH.
    05 SNAPSHOT-ID PIC 9(18) COMP.
    05 START-FILE-INDEX PIC 9(18) COMP.
    05 END-FILE-INDEX PIC 9(18) COMP.
    05 SIZE-IN-BYTES PIC 9(18) COMP.
    05 TASK-COUNT PIC 9(5) COMP.
    05 LAST-INDEX-OF-SNAPSHOT PIC X.

PROCEDURE DIVISION.

SKIP-MANIFESTS.
    MOVE 0 TO CURRENT-FILE-INDEX.
    PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > SIZE OF INDEXED-MANIFESTS
        IF INDEXED-MANIFESTS(IDX)(2:18) > STARTFILEINDEX
            EXIT PERFORM
        END-IF
        ADD 1 TO CURRENT-FILE-INDEX
    END-PERFORM.
    MOVE CURRENT-FILE-INDEX TO CURRENT-FILE-INDEX.

OPEN-MANIFEST-FILE.
    MOVE 0 TO CURRENT-SIZE-IN-BYTES.
    MOVE 0 TO TASK-COUNT.
    MOVE 'N' TO IS-LAST-INDEX.
    PERFORM UNTIL CURRENT-FILE-INDEX >= ENDFILEINDEX OR CURRENT-SIZE-IN-BYTES >= TARGETSIZEINBYTES
        CALL "OPEN-MANIFEST" USING MANIFESTS(CURRENT-FILE-INDEX), SNAPSHOT, SPECSBYID, CASESENSITIVE, TASKS(TASK-COUNT + 1)
        IF RETURN-CODE = 0
            ADD 1 TO TASK-COUNT
            ADD LENGTH OF TASKS(TASK-COUNT) TO CURRENT-SIZE-IN-BYTES
            ADD 1 TO CURRENT-FILE-INDEX
        END-IF
    END-PERFORM.
    IF CURRENT-FILE-INDEX = SIZE OF MANIFESTS AND TASK-COUNT = 0
        MOVE SNAPSHOTID TO SNAPSHOT-ID
        MOVE STARTFILEINDEX TO START-FILE-INDEX
        MOVE ENDFILEINDEX TO END-FILE-INDEX
        MOVE CURRENT-SIZE-IN-BYTES TO SIZE-IN-BYTES
        MOVE TASK-COUNT TO TASK-COUNT
        MOVE 'Y' TO LAST-INDEX-OF-SNAPSHOT
    ELSE
        IF TASK-COUNT > 1 AND CURRENT-SIZE-IN-BYTES > TARGETSIZEINBYTES
            SUBTRACT 1 FROM TASK-COUNT
            SUBTRACT LENGTH OF TASKS(TASK-COUNT + 1) FROM CURRENT-SIZE-IN-BYTES
            MOVE 'N' TO IS-LAST-INDEX
        END-IF
        MOVE SNAPSHOTID TO SNAPSHOT-ID
        MOVE STARTFILEINDEX TO START-FILE-INDEX
        MOVE CURRENT-FILE-INDEX TO END-FILE-INDEX
        MOVE CURRENT-SIZE-IN-BYTES TO SIZE-IN-BYTES
        MOVE TASK-COUNT TO TASK-COUNT
        MOVE IS-LAST-INDEX TO LAST-INDEX-OF-SNAPSHOT
    END-IF.
    MOVE MICRO-BATCH TO RETURN-VALUE.

GENERATE-MICRO-BATCH.
    PERFORM SKIP-MANIFESTS.
    PERFORM OPEN-MANIFEST-FILE.

ENTRY POINT.
    MOVE SNAPSHOT TO SNAPSHOT.
    MOVE IO TO IO.
    MOVE TRUE TO CASESENSITIVE.
    MOVE SPECSBYID TO SPECSBYID.
    CALL "GENERATE-MICRO-BATCH" USING STARTFILEINDEX, ENDFILEINDEX, TARGETSIZEINBYTES, SCANALLFILES.

STOP RUN.