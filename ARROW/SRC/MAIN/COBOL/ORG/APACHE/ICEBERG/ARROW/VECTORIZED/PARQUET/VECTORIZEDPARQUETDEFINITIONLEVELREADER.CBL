IDENTIFICATION DIVISION.
PROGRAM-ID. VECTORIZED-PARQUET-DEFINITION-LEVEL-READER.

ENVIRONMENT DIVISION.
REPOSITORY.
    COPY "ARROW-MEMORY.cpy".
    COPY "ARROW-VECTOR.cpy".
    COPY "ARROW-VALIDITY.cpy".
    COPY "PARQUET-UTIL.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 BIT-WIDTH                    PIC 9(09) COMP.
01 MAX-DEF-LEVEL                PIC 9(09) COMP.
01 SET-ARROW-VALIDITY-VECTOR    PIC 9(01) COMP.
01 READ-LENGTH                  PIC 9(01) COMP.
01 CURRENT-COUNT                PIC 9(09) COMP.
01 CURRENT-VALUE                PIC 9(09) COMP.
01 PACKED-VALUES-BUFFER         PIC X(32767).
01 PACKED-VALUES-BUFFER-IDX     PIC 9(09) COMP.
01 BYTE-ARRAY                   PIC X(32767).
01 BUFFER-IDX                   PIC 9(09) COMP.
01 LEFT                         PIC 9(09) COMP.
01 NUM-VALUES                   PIC 9(09) COMP.
01 DICT-ENCODED-VALUES-READER   USAGE POINTER.
01 DICT                         USAGE POINTER.
01 VALIDITY-BUFFER              USAGE POINTER.
01 DATA-BUFFER                  USAGE POINTER.

PROCEDURE DIVISION.

LONG-READER SECTION.
    PROCEDURE.
        PERFORM NEXT-BATCH.
        PERFORM NEXT-DICT-ENCODED-BATCH.

NEXT-BATCH.
    MOVE VECTOR TO DATA-BUFFER.
    MOVE START-OFFSET TO BUFFER-IDX.
    MOVE TYPE-WIDTH TO TYPEWIDTH.
    MOVE NUM-VALS-TO-READ TO NUM-VALUES.
    MOVE NULLABILITY-HOLDER TO NULLABILITY-HOLDER.
    MOVE VALUES-READER TO VALUES-READER.
    PERFORM UNTIL LEFT = 0
        IF CURRENT-COUNT = 0
            PERFORM READ-NEXT-GROUP
        END-IF
        MOVE MIN(LEFT, CURRENT-COUNT) TO NUM-VALUES
        EVALUATE MODE
            WHEN "RLE"
                PERFORM SET-NEXT-N-VALUES-IN-VECTOR
            WHEN "PACKED"
                PERFORM PACKED-LOGIC
        END-EVALUATE
        SUBTRACT NUM-VALUES FROM LEFT
        SUBTRACT NUM-VALUES FROM CURRENT-COUNT
    END-PERFORM.

NEXT-DICT-ENCODED-BATCH.
    MOVE VECTOR TO DATA-BUFFER.
    MOVE START-OFFSET TO BUFFER-IDX.
    MOVE TYPE-WIDTH TO TYPEWIDTH.
    MOVE NUM-VALS-TO-READ TO NUM-VALUES.
    MOVE NULLABILITY-HOLDER TO NULLABILITY-HOLDER.
    MOVE DICT-ENCODED-VALUES-READER TO DICT-ENCODED-VALUES-READER.
    MOVE DICT TO DICT.
    PERFORM UNTIL LEFT = 0
        IF CURRENT-COUNT = 0
            PERFORM READ-NEXT-GROUP
        END-IF
        MOVE MIN(LEFT, CURRENT-COUNT) TO NUM-VALUES
        MOVE VECTOR-VALIDITY-BUFFER TO VALIDITY-BUFFER
        EVALUATE MODE
            WHEN "RLE"
                IF CURRENT-VALUE = MAX-DEF-LEVEL
                    PERFORM NEXT-DICT-ENCODED-VAL
                ELSE
                    PERFORM SET-NULLS
                END-IF
                ADD NUM-VALUES TO BUFFER-IDX
            WHEN "PACKED"
                PERFORM PACKED-DICT-LOGIC
        END-EVALUATE
        SUBTRACT NUM-VALUES FROM LEFT
        SUBTRACT NUM-VALUES FROM CURRENT-COUNT
    END-PERFORM.

NEXT-VAL.
    MOVE VECTOR TO DATA-BUFFER.
    MOVE IDX TO BUFFER-IDX.
    MOVE VALUES-READER TO VALUES-READER.
    MOVE MODE TO MODE.
    EVALUATE DATA-TYPE
        WHEN "LONG"
            CALL "LONG-VAL" USING DATA-BUFFER, BUFFER-IDX, VALUES-READER, MODE
        WHEN "DOUBLE"
            CALL "DOUBLE-VAL" USING DATA-BUFFER, BUFFER-IDX, VALUES-READER, MODE
        WHEN "FLOAT"
            CALL "FLOAT-VAL" USING DATA-BUFFER, BUFFER-IDX, VALUES-READER, MODE
        WHEN "INTEGER"
            CALL "INTEGER-VAL" USING DATA-BUFFER, BUFFER-IDX, VALUES-READER, MODE
    END-EVALUATE.

NEXT-DICT-ENCODED-VAL.
    MOVE VECTOR TO DATA-BUFFER.
    MOVE IDX TO BUFFER-IDX.
    MOVE DICT-ENCODED-VALUES-READER TO DICT-ENCODED-VALUES-READER.
    MOVE NUM-VALUES TO NUM-VALUES.
    MOVE DICT TO DICT.
    MOVE NULLABILITY-HOLDER TO NULLABILITY-HOLDER.
    MOVE TYPE-WIDTH TO TYPEWIDTH.
    MOVE MODE TO MODE.
    EVALUATE DATA-TYPE
        WHEN "LONG"
            CALL "LONG-DICT-ENCODED-VAL" USING DATA-BUFFER, BUFFER-IDX, DICT-ENCODED-VALUES-READER,
                                         DICT, MODE, NUM-VALUES, NULLABILITY-HOLDER, TYPEWIDTH
        WHEN "DOUBLE"
            CALL "DOUBLE-DICT-ENCODED-VAL" USING DATA-BUFFER, BUFFER-IDX, DICT-ENCODED-VALUES-READER,
                                           DICT, MODE, NUM-VALUES, NULLABILITY-HOLDER, TYPEWIDTH
        WHEN "FLOAT"
            CALL "FLOAT-DICT-ENCODED-VAL" USING DATA-BUFFER, BUFFER-IDX, DICT-ENCODED-VALUES-READER,
                                          DICT, MODE, NUM-VALUES, NULLABILITY-HOLDER, TYPEWIDTH
        WHEN "INTEGER"
            CALL "INTEGER-DICT-ENCODED-VAL" USING DATA-BUFFER, BUFFER-IDX, DICT-ENCODED-VALUES-READER,
                                            DICT, MODE, NUM-VALUES, NULLABILITY-HOLDER, TYPEWIDTH
    END-EVALUATE.

PACKED-LOGIC.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-VALUES
        IF PACKED-VALUES-BUFFER(PACKED-VALUES-BUFFER-IDX:1) = MAX-DEF-LEVEL
            PERFORM NEXT-VAL
            MOVE BUFFER-IDX TO NULLABILITY-HOLDER-IDX
            MOVE 1 TO NULLABILITY-HOLDER-VALUE
            IF SET-ARROW-VALIDITY-VECTOR = 1
                CALL "SET-BIT" USING VECTOR-VALIDITY-BUFFER, BUFFER-IDX
            END-IF
        ELSE
            PERFORM SET-NULL
        END-IF
        ADD 1 TO BUFFER-IDX
        ADD 1 TO PACKED-VALUES-BUFFER-IDX
    END-PERFORM.

PACKED-DICT-LOGIC.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-VALUES
        IF PACKED-VALUES-BUFFER(PACKED-VALUES-BUFFER-IDX:1) = MAX-DEF-LEVEL
            PERFORM NEXT-DICT-ENCODED-VAL
            MOVE BUFFER-IDX TO NULLABILITY-HOLDER-IDX
            MOVE 1 TO NULLABILITY-HOLDER-VALUE
            IF SET-ARROW-VALIDITY-VECTOR = 1
                CALL "SET-BIT" USING VECTOR-VALIDITY-BUFFER, BUFFER-IDX
            END-IF
        ELSE
            PERFORM SET-NULL USING BUFFER-IDX, VALIDITY-BUFFER
        END-IF
        ADD 1 TO BUFFER-IDX
        ADD 1 TO PACKED-VALUES-BUFFER-IDX
    END-PERFORM.

SET-NULL.
    MOVE 0 TO NULLABILITY-HOLDER-VALUE
    IF SET-ARROW-VALIDITY-VECTOR = 1
        CALL "SET-VALIDITY-BIT" USING VALIDITY-BUFFER, BUFFER-IDX, 0
    END-IF.

SET-NULLS.
    PERFORM VARYING I FROM IDX BY 1 UNTIL I > IDX + NUM-VALUES - 1
        PERFORM SET-NULL USING I, VALIDITY-BUFFER
    END-PERFORM.

SET-NEXT-N-VALUES-IN-VECTOR.
    MOVE VECTOR-VALIDITY-BUFFER TO VALIDITY-BUFFER.
    IF CURRENT-VALUE = MAX-DEF-LEVEL
        MOVE VALUES-READER-BUFFER TO DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
        MOVE 1 TO NULLABILITY-HOLDER-VALUE
        IF SET-ARROW-VALIDITY-VECTOR = 1
            PERFORM VARYING I FROM BUFFER-IDX BY 1 UNTIL I > BUFFER-IDX + NUM-VALUES - 1
                CALL "SET-BIT" USING VALIDITY-BUFFER, I
            END-PERFORM
        END-IF
    ELSE
        PERFORM SET-NULLS USING BUFFER-IDX, NUM-VALUES, VALIDITY-BUFFER
    END-IF.

READ-NEXT-GROUP.
    PERFORM DEPENDING ON MODE
        WHEN "RLE"
            CALL "READ-NEXT-RLE-GROUP" USING BIT-WIDTH, CURRENT-COUNT, CURRENT-VALUE
        WHEN "PACKED"
            CALL "READ-NEXT-PACKED-GROUP" USING BIT-WIDTH, CURRENT-COUNT, PACKED-VALUES-BUFFER,
                                          PACKED-VALUES-BUFFER-IDX.

LONG-VAL SECTION.
    PROCEDURE.
        MOVE VALUES-READER-LONG TO DATA-BUFFER, BUFFER-IDX.

DOUBLE-VAL SECTION.
    PROCEDURE.
        MOVE VALUES-READER-DOUBLE TO DATA-BUFFER, BUFFER-IDX.

FLOAT-VAL SECTION.
    PROCEDURE.
        MOVE VALUES-READER-FLOAT TO DATA-BUFFER, BUFFER-IDX.

INTEGER-VAL SECTION.
    PROCEDURE.
        MOVE VALUES-READER-INTEGER TO DATA-BUFFER, BUFFER-IDX.

LONG-DICT-ENCODED-VAL SECTION.
    PROCEDURE.
        IF MODE = "RLE"
            CALL "LONG-DICT-ENCODED-READER-NEXT-BATCH" USING DATA-BUFFER, BUFFER-IDX, NUM-VALUES,
                                                      DICT, NULLABILITY-HOLDER, TYPEWIDTH
        ELSE IF MODE = "PACKED"
            MOVE DICT-DECODE-TO-LONG(DICT-ENCODED-VALUES-READER-READ-INTEGER) TO
                DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
        END-IF.

DOUBLE-DICT-ENCODED-VAL SECTION.
    PROCEDURE.
        IF MODE = "RLE"
            CALL "DOUBLE-DICT-ENCODED-READER-NEXT-BATCH" USING DATA-BUFFER, BUFFER-IDX, NUM-VALUES,
                                                         DICT, NULLABILITY-HOLDER, TYPEWIDTH
        ELSE IF MODE = "PACKED"
            MOVE DICT-DECODE-TO-DOUBLE(DICT-ENCODED-VALUES-READER-READ-INTEGER) TO
                DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
        END-IF.

FLOAT-DICT-ENCODED-VAL SECTION.
    PROCEDURE.
        IF MODE = "RLE"
            CALL "FLOAT-DICT-ENCODED-READER-NEXT-BATCH" USING DATA-BUFFER, BUFFER-IDX, NUM-VALUES,
                                                        DICT, NULLABILITY-HOLDER, TYPEWIDTH
        ELSE IF MODE = "PACKED"
            MOVE DICT-DECODE-TO-FLOAT(DICT-ENCODED-VALUES-READER-READ-INTEGER) TO
                DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
        END-IF.

INTEGER-DICT-ENCODED-VAL SECTION.
    PROCEDURE.
        IF MODE = "RLE"
            CALL "INTEGER-DICT-ENCODED-READER-NEXT-BATCH" USING DATA-BUFFER, BUFFER-IDX, NUM-VALUES,
                                                          DICT, NULLABILITY-HOLDER, TYPEWIDTH
        ELSE IF MODE = "PACKED"
            MOVE DICT-DECODE-TO-INT(DICT-ENCODED-VALUES-READER-READ-INTEGER) TO
                DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
        END-IF.

TIMESTAMP-MILLIS-READER SECTION.
    PROCEDURE.
        PERFORM NEXT-BATCH.
        PERFORM NEXT-DICT-ENCODED-BATCH.

NEXT-VAL.
    MOVE VALUES-READER-LONG TO DATA-BUFFER, BUFFER-IDX * TYPEWIDTH.
    MULTIPLY 1000 TO DATA-BUFFER, BUFFER-IDX * TYPEWIDTH.

NEXT-DICT-ENCODED-VAL.
    IF MODE = "RLE"
        CALL "TIMESTAMP-MILLIS-DICT-ENCODED-READER-NEXT-BATCH" USING DATA-BUFFER, BUFFER-IDX,
                                                                NUM-VALUES, DICT, NULLABILITY-HOLDER,
                                                                TYPEWIDTH
    ELSE IF MODE = "PACKED"
        MOVE DICT-DECODE-TO-LONG(DICT-ENCODED-VALUES-READER-READ-INTEGER) * 1000 TO
            DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
    END-IF.

TIMESTAMP-INT96-READER SECTION.
    PROCEDURE.
        PERFORM NEXT-BATCH.
        PERFORM NEXT-DICT-ENCODED-BATCH.

NEXT-VAL.
    MOVE VALUES-READER-BUFFER TO BYTE-ARRAY, 0, 12.
    MOVE PARQUET-UTIL-EXTRACT-TIMESTAMP-INT96(BYTE-ARRAY) TO DATA-BUFFER, BUFFER-IDX * TYPEWIDTH.

NEXT-DICT-ENCODED-VAL.
    EVALUATE MODE
        WHEN "RLE"
            CALL "TIMESTAMP-INT96-DICT-ENCODED-READER-NEXT-BATCH" USING DATA-BUFFER, BUFFER-IDX,
                                                                   NUM-VALUES, DICT, NULLABILITY-HOLDER,
                                                                   TYPEWIDTH
        WHEN "PACKED"
            MOVE PARQUET-UTIL-EXTRACT-TIMESTAMP-INT96(DICT-DECODE-TO-BINARY(DICT-ENCODED-VALUES-READER-READ-INTEGER)
                                                       .GET-BYTES-UNSAFE) TO DATA-BUFFER, BUFFER-IDX * TYPEWIDTH
        OTHER
            THROW "UNSUPPORTED MODE FOR TIMESTAMP INT96 READER: " MODE
    END-EVALUATE.

FIXED-SIZE-BINARY-READER SECTION.
    PROCEDURE.
        PERFORM NEXT-BATCH.
        PERFORM NEXT-DICT-ENCODED-BATCH.

NEXT-VAL.
    MOVE VALUES-READER-BUFFER TO BYTE-ARRAY, 0, TYPEWIDTH.
    CALL "SET" USING VECTOR, BUFFER-IDX, BYTE-ARRAY.

NEXT-DICT-ENCODED-VAL.
    IF MODE = "RLE"
        CALL "FIXED-SIZE-BINARY-DICT-ENCODED-READER-NEXT-BATCH" USING VECTOR, BUFFER-IDX,
                                                                 NUM-VALUES, DICT, NULLABILITY-HOLDER,
                                                                 TYPEWIDTH
    ELSE IF MODE = "PACKED"
        MOVE DICT-DECODE-TO-BINARY(DICT-ENCODED-VALUES-READER-READ-INTEGER).GET-BYTES TO BYTE-ARRAY