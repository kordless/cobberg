IDENTIFICATION DIVISION.
PROGRAM-ID. MANIFESTEVALUATOR.

ENVIRONMENT DIVISION.
SPECIAL-NAMES.
    DECIMAL-POINT IS COMMA.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-EXPR PIC X(32000).
01 WS-STATS PIC X(32000) OCCURS 200 TIMES.
01 WS-LOWER-BOUND PIC X(32000) OCCURS 200 TIMES.
01 WS-UPPER-BOUND PIC X(32000) OCCURS 200 TIMES.
01 WS-CONTAINS-NULL PIC X(1) OCCURS 200 TIMES.
01 WS-CONTAINS-NAN PIC X(1) OCCURS 200 TIMES.

01 WS-IN-PRED-LIMIT PIC 9(6) VALUE 200.
01 WS-ROWS-MIGHT-MATCH PIC X(1) VALUE 'T'.
01 WS-ROWS-CANNOT-MATCH PIC X(1) VALUE 'F'.

PROCEDURE DIVISION.
MAIN-PROCEDURE.
    PERFORM EVALUATE-MANIFEST.
    STOP RUN.

EVALUATE-MANIFEST.
    PERFORM INITIALIZE-MANIFEST-EVALUATOR.
    PERFORM EVALUATE-MANIFEST-FILE.

INITIALIZE-MANIFEST-EVALUATOR.
    MOVE FUNCTION REWRITE-NOT(WS-EXPR) TO WS-EXPR.
    PERFORM BIND-EXPRESSION.

BIND-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        MOVE WS-LOWER-BOUND(I) TO WS-LOWER-BOUND(I)
        MOVE WS-UPPER-BOUND(I) TO WS-UPPER-BOUND(I)
        MOVE WS-CONTAINS-NULL(I) TO WS-CONTAINS-NULL(I)
        MOVE WS-CONTAINS-NAN(I) TO WS-CONTAINS-NAN(I)
    END-PERFORM.

EVALUATE-MANIFEST-FILE.
    PERFORM EVALUATE-EXPRESSION.
    IF RETURN-VALUE = WS-ROWS-CANNOT-MATCH
        MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
    ELSE
        MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
    END-IF.

EVALUATE-EXPRESSION.
    EVALUATE TRUE
        WHEN WS-EXPR = 'ALWAYS-TRUE'
            MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
        WHEN WS-EXPR = 'ALWAYS-FALSE'
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
        WHEN WS-EXPR = 'NOT'
            PERFORM NOT-EXPRESSION
        WHEN WS-EXPR = 'AND'
            PERFORM AND-EXPRESSION
        WHEN WS-EXPR = 'OR'
            PERFORM OR-EXPRESSION
        WHEN WS-EXPR = 'IS-NULL'
            PERFORM IS-NULL-EXPRESSION
        WHEN WS-EXPR = 'NOT-NULL'
            PERFORM NOT-NULL-EXPRESSION
        WHEN WS-EXPR = 'IS-NAN'
            PERFORM IS-NAN-EXPRESSION
        WHEN WS-EXPR = 'NOT-NAN'
            PERFORM NOT-NAN-EXPRESSION
        WHEN WS-EXPR = 'LT'
            PERFORM LT-EXPRESSION
        WHEN WS-EXPR = 'LT-EQ'
            PERFORM LT-EQ-EXPRESSION
        WHEN WS-EXPR = 'GT'
            PERFORM GT-EXPRESSION
        WHEN WS-EXPR = 'GT-EQ'
            PERFORM GT-EQ-EXPRESSION
        WHEN WS-EXPR = 'EQ'
            PERFORM EQ-EXPRESSION
        WHEN WS-EXPR = 'NOT-EQ'
            PERFORM NOT-EQ-EXPRESSION
        WHEN WS-EXPR = 'IN'
            PERFORM IN-EXPRESSION
        WHEN WS-EXPR = 'NOT-IN'
            PERFORM NOT-IN-EXPRESSION
        WHEN WS-EXPR = 'STARTS-WITH'
            PERFORM STARTS-WITH-EXPRESSION
        WHEN WS-EXPR = 'NOT-STARTS-WITH'
            PERFORM NOT-STARTS-WITH-EXPRESSION
    END-EVALUATE.

NOT-EXPRESSION.
    EVALUATE RETURN-VALUE
        WHEN WS-ROWS-MIGHT-MATCH
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
        WHEN WS-ROWS-CANNOT-MATCH
            MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
    END-EVALUATE.

AND-EXPRESSION.
    EVALUATE RETURN-VALUE
        WHEN WS-ROWS-MIGHT-MATCH
            PERFORM EVALUATE-EXPRESSION
            IF RETURN-VALUE = WS-ROWS-MIGHT-MATCH
                MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
            ELSE
                MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            END-IF
        WHEN WS-ROWS-CANNOT-MATCH
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
    END-EVALUATE.

OR-EXPRESSION.
    EVALUATE RETURN-VALUE
        WHEN WS-ROWS-MIGHT-MATCH
            MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
        WHEN WS-ROWS-CANNOT-MATCH
            PERFORM EVALUATE-EXPRESSION
            IF RETURN-VALUE = WS-ROWS-MIGHT-MATCH
                MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
            ELSE
                MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            END-IF
    END-EVALUATE.

IS-NULL-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-CONTAINS-NULL(I) = 'T'
            MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
            GO TO IS-NULL-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE.
IS-NULL-EXIT.
    EXIT.

NOT-NULL-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF ALL-VALUES-ARE-NULL(I, WS-STATS(I))
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO NOT-NULL-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
NOT-NULL-EXIT.
    EXIT.

IS-NAN-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-CONTAINS-NAN(I) = 'F' AND ALL-VALUES-ARE-NULL(I, WS-STATS(I))
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO IS-NAN-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
IS-NAN-EXIT.
    EXIT.

NOT-NAN-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-CONTAINS-NAN(I) = 'T' AND NOT ALL-VALUES-ARE-NULL(I, WS-STATS(I)) AND WS-LOWER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO NOT-NAN-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
NOT-NAN-EXIT.
    EXIT.

LT-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-LOWER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO LT-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-LOWER-BOUND(I)), LITERAL-VALUE) >= 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO LT-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
LT-EXIT.
    EXIT.

LT-EQ-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-LOWER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO LT-EQ-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-LOWER-BOUND(I)), LITERAL-VALUE) > 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO LT-EQ-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
LT-EQ-EXIT.
    EXIT.

GT-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-UPPER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO GT-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-UPPER-BOUND(I)), LITERAL-VALUE) <= 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO GT-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
GT-EXIT.
    EXIT.

GT-EQ-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-UPPER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO GT-EQ-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-UPPER-BOUND(I)), LITERAL-VALUE) < 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO GT-EQ-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
GT-EQ-EXIT.
    EXIT.

EQ-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-LOWER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO EQ-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-LOWER-BOUND(I)), LITERAL-VALUE) > 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO EQ-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-UPPER-BOUND(I)), LITERAL-VALUE) < 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO EQ-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
EQ-EXIT.
    EXIT.

NOT-EQ-EXPRESSION.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.

IN-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-LOWER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO IN-EXIT
        END-IF
        PERFORM FILTER-LITERALS
        IF FUNCTION LENGTH(LITERALS) = 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO IN-EXIT
        END-IF
        PERFORM FILTER-LITERALS-UPPER-BOUND
        IF FUNCTION LENGTH(LITERALS) = 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO IN-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
IN-EXIT.
    EXIT.

NOT-IN-EXPRESSION.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.

STARTS-WITH-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-LOWER-BOUND(I) IS NULL
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO STARTS-WITH-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION TRUNCATE-BINARY(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-LOWER-BOUND(I)), FUNCTION LENGTH(LITERAL-VALUE)), LITERAL-VALUE) > 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO STARTS-WITH-EXIT
        END-IF
        IF FUNCTION COMPARE(FUNCTION TRUNCATE-BINARY(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-UPPER-BOUND(I)), FUNCTION LENGTH(LITERAL-VALUE)), LITERAL-VALUE) < 0
            MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
            GO TO STARTS-WITH-EXIT
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
STARTS-WITH-EXIT.
    EXIT.

NOT-STARTS-WITH-EXPRESSION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 200
        IF WS-CONTAINS-NULL(I) = 'T'
            MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE
            GO TO NOT-STARTS-WITH-EXIT
        END-IF
        IF WS-LOWER-BOUND(I) IS NOT NULL AND WS-UPPER-BOUND(I) IS NOT NULL
            IF FUNCTION COMPARE(FUNCTION TRUNCATE-BINARY(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-LOWER-BOUND(I)), FUNCTION LENGTH(LITERAL-VALUE)), LITERAL-VALUE) = 0
                AND FUNCTION COMPARE(FUNCTION TRUNCATE-BINARY(FUNCTION CONVERT-FROM-BYTE-BUFFER(WS-UPPER-BOUND(I)), FUNCTION LENGTH(LITERAL-VALUE)), LITERAL-VALUE) = 0
                MOVE WS-ROWS-CANNOT-MATCH TO RETURN-VALUE
                GO TO NOT-STARTS-WITH-EXIT
            END-IF
        END-IF
    END-PERFORM.
    MOVE WS-ROWS-MIGHT-MATCH TO RETURN-VALUE.
NOT-STARTS-WITH-EXIT.
    EXIT.

ALL-VALUES-ARE-NULL(IDX, STATS-REC):
    IF WS-CONTAINS-NULL(IDX) = 'T' AND WS-LOWER-BOUND(IDX) IS NULL
        IF FUNCTION TYPE-ID(STATS-REC) = 'DOUBLE' OR FUNCTION TYPE-ID(