IDENTIFICATION DIVISION.
PROGRAM-ID. NESSIE-CATALOG.

ENVIRONMENT DIVISION.
SPECIAL-NAMES.
    FUNCTION JOINER IS SLASH DEFINED AS "/".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 DEFAULT-CATALOG-OPTIONS.
   05 TABLE-DEFAULT-PREFIX PIC X(32) VALUE "table-defaults.".
   05 TABLE-PROPERTIES.
      10 GC-ENABLED PIC X(11) VALUE "gc.enabled".
      10 METADATA-DELETE-AFTER-COMMIT-ENABLED PIC X(37) VALUE "metadata-delete-after-commit.enabled".
   05 OPTIONS.
      10 GC-ENABLED-VALUE PIC X(5) VALUE "false".
      10 METADATA-DELETE-AFTER-COMMIT-ENABLED-VALUE PIC X(5) VALUE "false".

01 WS-VARIABLES.
   05 WS-NAME PIC X(64) VALUE SPACES.
   05 WS-WAREHOUSE-LOCATION PIC X(1024) VALUE SPACES.
   05 WS-CONFIG PIC X(1024) VALUE SPACES.
   05 WS-FILE-IO PIC X(64) VALUE SPACES.
   05 WS-CATALOG-OPTIONS PIC X(1024) VALUE SPACES.
   05 WS-CLOSEABLE-GROUP PIC X(64) VALUE SPACES.

PROCEDURE DIVISION.
MAIN-PROCEDURE.
    INITIALIZE-CATALOG.
    CLOSE-CATALOG.
    PERFORM NAME-PROCEDURE.
    PERFORM TABLE-OPS-PROCEDURE.
    PERFORM NAMESPACE-PROCEDURE.
    PERFORM CONF-PROCEDURE.
    PERFORM TESTING-PROCEDURES.
    PERFORM VIEW-OPS-PROCEDURE.
    STOP RUN.

INITIALIZE-CATALOG.
    MOVE "nessie" TO WS-NAME.
    MOVE WS-CONFIG TO WS-CATALOG-OPTIONS.
    PERFORM COMPUTE-WAREHOUSE-LOCATION.
    PERFORM INITIALIZE-NESSIE-CLIENT.
    PERFORM INITIALIZE-CLOSEABLE-GROUP.

CLOSE-CATALOG.
    IF WS-CLOSEABLE-GROUP NOT EQUAL SPACES
    THEN
        CLOSE WS-CLOSEABLE-GROUP
    END-IF.

NAME-PROCEDURE.
    MOVE WS-NAME TO RETURN-CODE.

TABLE-OPS-PROCEDURE.
    PERFORM PARSE-TABLE-REFERENCE.
    PERFORM NEW-TABLE-OPS.
    PERFORM DEFAULT-WAREHOUSE-LOCATION.
    PERFORM LIST-TABLES.
    PERFORM DROP-TABLE.
    PERFORM RENAME-TABLE.

NAMESPACE-PROCEDURE.
    PERFORM CREATE-NAMESPACE.
    PERFORM LIST-NAMESPACES.
    PERFORM LOAD-NAMESPACE-METADATA.
    PERFORM DROP-NAMESPACE.
    PERFORM SET-PROPERTIES.
    PERFORM REMOVE-PROPERTIES.

CONF-PROCEDURE.
    MOVE WS-CONFIG TO OBJECT.

TESTING-PROCEDURES.
    PERFORM CURRENT-HASH.
    PERFORM CURRENT-REF-NAME.
    PERFORM FILE-IO.

VIEW-OPS-PROCEDURE.
    PERFORM NEW-VIEW-OPS.
    PERFORM LIST-VIEWS.
    PERFORM DROP-VIEW.
    PERFORM RENAME-VIEW.

COMPUTE-WAREHOUSE-LOCATION.
    MOVE WS-CATALOG-OPTIONS(CatalogProperties.WAREHOUSE_LOCATION) TO WS-WAREHOUSE-LOCATION.
    IF WS-WAREHOUSE-LOCATION IS EQUAL TO SPACES
    THEN
        DISPLAY "Catalog creation failed, 'warehouse' property not set"
        MOVE 1 TO RETURN-CODE
        STOP RUN
    END-IF.
    MOVE FUNCTION STRIP(WS-WAREHOUSE-LOCATION, TRAILING, "/") TO WS-WAREHOUSE-LOCATION.

INITIALIZE-NESSIE-CLIENT.
    PERFORM LOAD-FILE-IO.
    PERFORM CREATE-NESSIE-CLIENT.

INITIALIZE-CLOSEABLE-GROUP.
    MOVE SPACES TO WS-CLOSEABLE-GROUP.
    ADD WS-CLIENT TO WS-CLOSEABLE-GROUP.
    ADD WS-FILE-IO TO WS-CLOSEABLE-GROUP.
    ADD WS-METRICS-REPORTER TO WS-CLOSEABLE-GROUP.
    SET WS-CLOSEABLE-GROUP-SUPPRESS-CLOSE-FAILURE TO TRUE.

LOAD-FILE-IO.
    MOVE "org.apache.iceberg.hadoop.HadoopFileIO" TO WS-FILE-IO-IMPL.
    MOVE WS-CATALOG-OPTIONS(CatalogProperties.FILE_IO_IMPL) TO WS-FILE-IO-IMPL.
    MOVE WS-CONFIG TO WS-CONFIG.
    MOVE WS-CATALOG-OPTIONS TO WS-OPTIONS.
    CALL "CatalogUtil.loadFileIO" USING WS-FILE-IO-IMPL, WS-OPTIONS, WS-CONFIG INTO WS-FILE-IO.

CREATE-NESSIE-CLIENT.
    MOVE WS-CATALOG-OPTIONS TO WS-OPTIONS.
    PERFORM REMOVE-NESSIE-PREFIX.
    PERFORM GET-REQUESTED-REF.
    PERFORM GET-REQUESTED-HASH.
    PERFORM CREATE-CONFIG-SOURCE.
    PERFORM CREATE-CLIENT-BUILDER.
    PERFORM INFER-API-VERSION.
    PERFORM BUILD-CLIENT.
    MOVE WS-CLIENT TO WS-NESSIE-CLIENT.

REMOVE-NESSIE-PREFIX.
    REPLACE FUNCTION "NessieUtil.NESSIE_CONFIG_PREFIX" BY SPACES INTO WS-OPTIONS.

GET-REQUESTED-REF.
    MOVE WS-OPTIONS(NessieConfigConstants.CONF_NESSIE_REF) TO WS-REQUESTED-REF.

GET-REQUESTED-HASH.
    MOVE WS-OPTIONS(NessieConfigConstants.CONF_NESSIE_REF_HASH) TO WS-REQUESTED-HASH.

CREATE-CONFIG-SOURCE.
    CALL "NessieClientConfigSources.mapConfigSource" USING WS-OPTIONS
         GIVING WS-CONFIG-SOURCE.
    CALL "NessieClientConfigSources.fallbackTo" USING WS-CONFIG-SOURCE, WS-REMOVE-PREFIX
         GIVING WS-CONFIG-SOURCE.

REMOVE-PREFIX.
    REPLACE FUNCTION "NessieUtil.NESSIE_CONFIG_PREFIX" BY SPACES INTO ARGUMENT-VALUE.
    MOVE ARGUMENT-VALUE TO RETURN-CODE.

CREATE-CLIENT-BUILDER.
    CALL "NessieClientBuilder.createClientBuilderFromSystemSettings" USING WS-CONFIG-SOURCE
         GIVING WS-CLIENT-BUILDER.

INFER-API-VERSION.
    MOVE WS-OPTIONS(NessieUtil.CLIENT_API_VERSION) TO WS-API-VERSION.
    IF WS-API-VERSION IS EQUAL TO SPACES
    THEN
        PERFORM INFER-VERSION-FROM-URI
    END-IF.

INFER-VERSION-FROM-URI.
    MOVE WS-OPTIONS(CatalogProperties.URI) TO WS-URI.
    IF WS-URI IS EQUAL TO SPACES
    THEN
        DISPLAY "URI is not specified in the catalog properties"
        MOVE 1 TO RETURN-CODE
        STOP RUN
    END-IF.
    PERFORM PATTERN-MATCH-VERSION.

PATTERN-MATCH-VERSION.
    MOVE FUNCTION REGEX-REPLACE(WS-URI, "/v(\d+)$", "$1") TO WS-API-VERSION.
    IF WS-API-VERSION IS EQUAL TO SPACES
    THEN
        DISPLAY "URI doesn't end with the version: " WS-URI ". Please configure `client-api-version` in the catalog properties explicitly."
        MOVE 1 TO RETURN-CODE
        STOP RUN
    END-IF.

BUILD-CLIENT.
    EVALUATE WS-API-VERSION
    WHEN "1"
        CALL "nessieClientBuilder.build" USING NessieApiV1 INTO WS-CLIENT
    WHEN "2"
        CALL "nessieClientBuilder.build" USING NessieApiV2 INTO WS-CLIENT
    OTHER
        DISPLAY "Unsupported " NessieUtil.CLIENT_API_VERSION ": " WS-API-VERSION ". Can only be 1 or 2"
        MOVE 1 TO RETURN-CODE
        STOP RUN
    END-EVALUATE.

INITIALIZE-CATALOG.
    MOVE WS-NAME TO ARGUMENT1.
    MOVE WS-NESSIE-CLIENT TO ARGUMENT2.
    MOVE WS-FILE-IO TO ARGUMENT3.
    MOVE WS-CATALOG-OPTIONS TO ARGUMENT4.
    CALL "initialize" USING ARGUMENT1, ARGUMENT2, ARGUMENT3, ARGUMENT4.

PARSE-TABLE-REFERENCE.
    MOVE FUNCTION PARSE-TABLE-REFERENCE(ARGUMENT1) TO WS-TABLE-REFERENCE.
    IF WS-TABLE-REFERENCE-HAS-TIMESTAMP
    THEN
        DISPLAY "Invalid table name: # is only allowed for hashes (reference by timestamp is not supported)"
        MOVE 1 TO RETURN-CODE
        STOP RUN
    END-IF.

NEW-TABLE-OPS.
    MOVE WS-TABLE-REFERENCE TO ARGUMENT1.
    MOVE WS-NESSIE-CLIENT TO ARGUMENT2.
    MOVE WS-FILE-IO TO ARGUMENT3.
    CALL "newTableOps" USING ARGUMENT1, ARGUMENT2, ARGUMENT3 INTO WS-TABLE-OPS.

DEFAULT-WAREHOUSE-LOCATION.
    MOVE ARGUMENT1 TO WS-TABLE-IDENTIFIER.
    IF WS-TABLE-IDENTIFIER-HAS-NAMESPACE
    THEN
        MOVE FUNCTION SLASH-JOIN(WS-WAREHOUSE-LOCATION, WS-TABLE-IDENTIFIER-NAMESPACE) TO WS-BASE-LOCATION.
        PERFORM LOAD-NAMESPACE-METADATA
        MOVE WS-NAMESPACE-METADATA(NAMESPACE-LOCATION-PROPS) TO WS-BASE-LOCATION
    ELSE
        MOVE FUNCTION SLASH-JOIN(WS-WAREHOUSE-LOCATION, WS-TABLE-IDENTIFIER-NAME) TO WS-BASE-LOCATION
    END-IF.
    MOVE FUNCTION SLASH-JOIN(WS-BASE-LOCATION, WS-TABLE-IDENTIFIER-NAME) TO WS-LOCATION.
    MOVE FUNCTION CONCAT(WS-LOCATION, "_", FUNCTION UUID) TO RETURN-CODE.

LIST-TABLES.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    CALL "listTables" USING WS-NAMESPACE INTO WS-TABLE-IDENTIFIERS.

DROP-TABLE.
    MOVE ARGUMENT1 TO WS-TABLE-IDENTIFIER.
    MOVE ARGUMENT2 TO WS-PURGE.
    PERFORM PARSE-TABLE-REFERENCE.
    CALL "dropTable" USING WS-TABLE-IDENTIFIER, WS-PURGE INTO RETURN-CODE.

RENAME-TABLE.
    MOVE ARGUMENT1 TO WS-FROM-IDENTIFIER.
    MOVE ARGUMENT2 TO WS-TO-IDENTIFIER.
    PERFORM PARSE-TABLE-REFERENCE USING WS-FROM-IDENTIFIER.
    MOVE WS-TABLE-REFERENCE TO WS-FROM-TABLE-REFERENCE.
    PERFORM PARSE-TABLE-REFERENCE USING WS-TO-IDENTIFIER.
    MOVE WS-TABLE-REFERENCE TO WS-TO-TABLE-REFERENCE.
    PERFORM VALIDATE-REFERENCE-FOR-RENAME.
    PERFORM REMOVE-CATALOG-NAME USING WS-FROM-IDENTIFIER, WS-FROM-TABLE-REFERENCE INTO WS-FROM-ID.
    PERFORM REMOVE-CATALOG-NAME USING WS-TO-IDENTIFIER, WS-TO-TABLE-REFERENCE INTO WS-TO-ID.
    CALL "renameTable" USING WS-FROM-ID, WS-TO-ID.

CREATE-NAMESPACE.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    MOVE ARGUMENT2 TO WS-NAMESPACE-METADATA.
    CALL "createNamespace" USING WS-NAMESPACE, WS-NAMESPACE-METADATA.

LIST-NAMESPACES.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    CALL "listNamespaces" USING WS-NAMESPACE INTO WS-NAMESPACES.

LOAD-NAMESPACE-METADATA.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    CALL "loadNamespaceMetadata" USING WS-NAMESPACE INTO WS-NAMESPACE-METADATA.
    MOVE WS-NAMESPACE-METADATA TO RETURN-CODE.

DROP-NAMESPACE.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    CALL "dropNamespace" USING WS-NAMESPACE INTO RETURN-CODE.

SET-PROPERTIES.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    MOVE ARGUMENT2 TO WS-NAMESPACE-PROPERTIES.
    CALL "setProperties" USING WS-NAMESPACE, WS-NAMESPACE-PROPERTIES INTO RETURN-CODE.

REMOVE-PROPERTIES.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    MOVE ARGUMENT2 TO WS-NAMESPACE-PROPERTIES-TO-REMOVE.
    CALL "removeProperties" USING WS-NAMESPACE, WS-NAMESPACE-PROPERTIES-TO-REMOVE INTO RETURN-CODE.

CONF-PROCEDURE.
    MOVE ARGUMENT1 TO WS-CONFIG.

CURRENT-HASH.
    CALL "currentHash" OF WS-NESSIE-CLIENT INTO RETURN-CODE.

CURRENT-REF-NAME.
    CALL "currentRefName" OF WS-NESSIE-CLIENT INTO RETURN-CODE.

FILE-IO.
    MOVE WS-FILE-IO TO RETURN-CODE.

REMOVE-CATALOG-NAME.
    MOVE ARGUMENT1 TO WS-TABLE-IDENTIFIER.
    MOVE ARGUMENT2 TO WS-TABLE-REFERENCE.
    CALL "removeCatalogName" USING WS-TABLE-IDENTIFIER, WS-NAME INTO RETURN-CODE.

VALIDATE-REFERENCE-FOR-RENAME.
    MOVE WS-FROM-TABLE-REFERENCE TO ARGUMENT1.
    MOVE WS-TO-TABLE-REFERENCE TO ARGUMENT2.
    MOVE Content.Type.ICEBERG_TABLE TO ARGUMENT3.
    CALL "validateReferenceForRename" USING ARGUMENT1, ARGUMENT2, ARGUMENT3.

NEW-VIEW-OPS.
    MOVE ARGUMENT1 TO WS-TABLE-IDENTIFIER.
    PERFORM PARSE-TABLE-REFERENCE USING WS-TABLE-IDENTIFIER.
    CALL "newViewOps" USING WS-TABLE-IDENTIFIER, WS-NESSIE-CLIENT, WS-FILE-IO INTO WS-VIEW-OPS.

LIST-VIEWS.
    MOVE ARGUMENT1 TO WS-NAMESPACE.
    CALL "listViews" USING WS-NAMESPACE INTO WS-VIEW-IDENTIFIERS.

DROP-VIEW.
    MOVE ARGUMENT1 TO WS-VIEW-IDENTIFIER.
    PERFORM PARSE-TABLE-REFERENCE USING WS-VIEW-IDENTIFIER.
    CALL "dropView" USING WS-VIEW-IDENTIFIER, FALSE INTO RETURN-CODE.

RENAME-VIEW.
    MOVE ARGUMENT1 TO WS-FROM-IDENTIFIER.
    MOVE ARGUMENT2 TO WS-TO-IDENTIFIER.
    PERFORM PARSE-TABLE-REFERENCE USING WS-FROM-IDENTIFIER.
    MOVE WS-TABLE-REFERENCE TO WS-FROM-TABLE-REFERENCE.
    PERFORM PARSE-TABLE-REFERENCE USING WS-TO-IDENTIFIER.
    MOVE WS-TABLE-REFERENCE TO WS-TO-TABLE-REFERENCE.
    PERFORM VALIDATE-REFERENCE-FOR-RENAME USING WS-FROM-TABLE-REFERENCE, WS-TO-TABLE-REFERENCE, Content.Type.ICEBERG_VIEW.
    PERFORM REMOVE-CATALOG-NAME USING W